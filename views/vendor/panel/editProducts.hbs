<!DOCTYPE html>
<html lang="en">

<head>
    <!-- Meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Vendor Products</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous" />
    <style>
        * {
            padding: 0;
            margin: 0;
        }
    </style>
</head>

<body style="margin: 0; padding: 0" class="mx-0">

    <!-- Main container start -->
    <div class="container-fluid p-0 d-flex">
        <!-- Left side start -->
        <div class="w-25 border bg-black h-100 p-3 d-flex flex-column justify-content-between">
            <!-- Navigation links -->
            <a href="/vendor/dashboard" class="btn btn-success mb-2">Dash Board</a>
            <a href="/vendor/ViewProducts" class="btn btn-success mb-2   ">Products</a>
            <!-- Additional navigation links can be added here -->
        </div>
        <!-- Left side end -->


        <!-- Right side section start -->
        <div class="w-100 h-50 border bg-primary p-3">
            <div class="row mb-3">
                <div class="col mb-1">
                    <div class="modal-body">
                        <!-- Add your form here -->
                        <form id="addForm" enctype="multipart/form-data">

                            <!-- Category dropdown -->
                            <div class="mb-3">
                                <label for="productCategory" class="form-label">Category</label>
                                <select class="form-select" id="productCategory" name="productCategory">
                                    <option value="{{productCategory}}">{{productCategory}}</option> 
                                    {{#each category}}
                                    <option value="{{this.categoryName}}">{{this.categoryName}}</option>
                                    {{/each}}
                                </select>
                            </div>

                            <!-- Subcategory dropdown -->
                            <div class="mb-3">
                                <label for="productSubCategory" class="form-label">Subcategory</label>
                                <select class="form-select" id="productSubCategory" name="productSubCategory">
                                    <option value="{{productSubCategory}}">{{productSubCategory}}</option>
                                    {{#each subCategory}}
                                    <option value="{{this.subCategoryName}}">{{this.subCategoryName}}</option>
                                    {{/each}}
                                </select>
                            </div>

                            <!-- Brand dropdown -->
                            <div class="mb-3">
                                <label for="productBrand" class="form-label">Brand</label>
                                <select class="form-select" id="productBrand" name="productBrand">
                                    <option value="{{productBrand}}">{{productBrand}}</option>
                                    {{#each brand}}
                                    <option value="{{this.brandName}}">{{this.brandName}}</option>
                                    {{/each}}
                                </select>
                            </div>




                            <div class="mb-3">

                                <label for="">Current Product Images</label><br>
                                {{#each productImage}}
                                <img src="{{this.url}}" style="width: 90px;" alt="">
                                {{/each}}
                                <br>

                                <label for="productImage" class="form-label">Product Image URL</label>
                                <input type="file" class="form-control" id="productImage" name="images" multiple>
                                <small style="color:greenyellow;" id="productImageError"></small>
                            </div>
                            <div class="mb-3">
                                <label for="productName" class="form-label">Product Name</label>
                                <input type="text" class="form-control" id="productName" name="productName"
                                    value="{{productName}}" oninput="capitalize(this)">
                                     <small style="color: red;" id="productNameError"></small>
                            </div>
                            <div class="mb-3">
                                <label for="productColor" class="form-label">Product Color</label>
                                <input type="text" class="form-control" id="productColor" name="productColor"
                                    value="{{productColor}} " oninput="capitalize(this)">
                                    <small style="color: red;" id="productColorError"></small>
                            </div>
                            <div class="mb-3">
                                <label for="productSize" class="form-label">Product Size</label>
                                <input type="number" class="form-control" id="productSize" name="productSize"
                                    value="{{productSize}}">
                                      <small style="color: red;" id="productSizeError"></small>
                            </div>
                            <div class="mb-3">
                                <label for="productQty" class="form-label">Product Quantity</label>
                                <input type="number" class="form-control" id="productQty" name="productQty"
                                    value="{{productQty}}">
                                     <small style="color: red;" id="productQtyError"></small>
                            </div>
                             <div class="mb-3">
                                <label for="productMRP" class="form-label">Product MRP</label>
                                <input type="number" class="form-control" id="productMRP" name="productMRP"
                                    value="{{productMRP}}">
                                    <small style="color: red;" id="productMRPError"></small>
                            </div>
                            <div class="mb-3">
                                <label for="productPrice" class="form-label">Product Price</label>
                                <input type="number" class="form-control" id="productPrice" name="productPrice"
                                    value="{{productPrice}}">
                                     <small style="color: red;" id="productPriceError"></small>
                            </div>

                            <!-- Add other form fields based on your table headers -->
                            <button type="submit" class="btn btn-success" onclick="validation('{{productId}}')">Update
                                Product</button>
                        </form>
                        {{!-- FFORM END --}}
                    </div>

                </div>
            </div>
        </div>
        <!-- Modal end -->
    </div>
    </div>
    <!-- Right side end -->
    </div>
    <!-- Main container end -->


    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script>
    //CAPITALIZING
           function capitalize(inputElement){ //GIVING THIS AS ARGUMENT FROM FORM SO WE CAN GET THE EACH AND EVERY DETAILS OF ALL THINGS FOM THAT INPUT FIELD EG=ID,NAME,INPUTtYPEetc...
            // alert(inputElement.id)
            let inputValue = inputElement.value;
            let capitalizedValue =  inputValue.charAt(0).toUpperCase()+inputValue.slice(1);
            inputElement.value = capitalizedValue;
        }
      
         
        function validation(id){
             event.preventDefault();
        let E=0;
       //ALL FORM FIELD VALUES
        let image = $('#productImage');
        let color = $('#productColor').val();
        let name = $('#productName').val();
        let size = $('#productSize').val();
        let qty = $('#productQty').val();
        let MRP = $('#productMRP').val();
        let price = $('#productPrice').val();
     
     //ALL FORM ERROR FIELDS
        let imageError = $('#productImageError');
        let nameError = $('#productNameError');
        let colorError = $('#productColorError');
        let sizeError = $('#productSizeError');
        let qtyError = $('#productQtyError');
        let MRPError = $('#productMRPError');
        let priceError = $('#productPriceError');


        // Reset error messages
        imageError.html('');
        nameError.html('');
        colorError.html('');
        sizeError.html('');
        qtyError.html('');
        MRPError.html('');
        priceError.html('');
      
        // REGEX FOR VALIDATIONS
        let numberRegex = /^(?!0)(?!-)\d{1,4}$/; // 1-4 digits, no space, no negative number, only positive numbers
        let colorRegex=/^[a-zA-Z\s]+$/ ;
       // let nameRegex =/^(?=.*[a-zA-Z])[a-zA-Z0-9\s]{1,30}$/;
       let nameRegex =/^(?=.*[a-zA-Z])[a-zA-Z0-9\s\-.,'/]{1,100}$/

   
      // CHECKING EACH FIELDS FOR CORRESPONDING VALIDATIONS
         if (image.get(0).files.length == 0) {
            imageError.html('Image will remain same');
          } 
        if (!nameRegex.test(name)) {
            nameError.html('Invalid Name / Length Shoulb Be 1-100 Char');
             E++;
          }
        if (!colorRegex.test(color)) {
            colorError.html('Invalid Color');
           E++;
        }
        if (size<7 || size >12 ) {
            sizeError.html('Invalid Size Adult Size Range 7 -12');
           E++;
        }
        if (!numberRegex.test(qty)) {
            qtyError.html('Invalid quantity/Maximum 4 Digits');
           E++;
        }
        if (!numberRegex.test(MRP)) {
            MRPError.html('Invalid MRP /Maximum 4 Digits');
             E++;
        }
         if (!numberRegex.test(price) ) {
            priceError.html('Invalid Price /Maximum 4 Digits');
              E++;
        }else if (parseInt(price) >= parseInt(MRP)){
              priceError.html('price should less than MRP');
              E++;
        }
        
       
        if(E!=0){
            return 
        }else {
           editProduct(id)
        }
           
        }



        //only works after dom fully loaded
        function editProduct(productId) {
            event.preventDefault();
            let productCategory = $("#productCategory").val()
            let productSubCategory = $("#productSubCategory").val()
            let productBrand = $("#productBrand").val()
            let productName = $("#productName").val()
            let productColor = $("#productColor").val()
            let productSize = $("#productSize").val()
            let productQty = $("#productQty").val()
            let productPrice = $("#productPrice").val()
            let productMRP = $("#productMRP").val()


            //  let productImage = document.getElementById('productImage').files[0]
            let productImages = document.getElementById('productImage').files;

            //alert(`${productCategory},${productSubCategory},${productBrand},${productName},${productColor},${productSize},${productQty},${productPrice}`)

            //create form data
            const formData = new FormData();

            formData.append('productCategory', productCategory);
            formData.append('productSubCategory', productSubCategory);
            formData.append('productBrand', productBrand);
            formData.append('productName', productName);
            formData.append('productColor', productColor);
            formData.append('productSize', productSize);
            formData.append('productQty', productQty);
            formData.append('productPrice', productPrice);
            formData.append('productMRP', productMRP);

            // formData.append('image',productImage);
            for (let i = 0; i < productImages.length; i++) {
                formData.append('images', productImages[i])
            }



            // const data = {productQty,productPrice,productSize,productColor,productCategory,productSubCategory,productBrand,productName }
            axios.put(`/vendor/editProducts/${productId}`, formData, {
                headers: {
                    'Content-Type': 'multipart/form-data'
                }
            })
                .then(response => {
                    if(response.data.success){
                        console.log("successfully updated")
                 window.location.href='/vendor/ViewProducts?productUpdated=true'
                    }else{
                         console.log("nOthong to  updated")
              window.location.href='/vendor/ViewProducts?NothingUpdated=true'
                    }        
                })
                .catch(error => {
                alert("cant modify now")
                console.log(error)
                });
        }


         


    </script>

</body>

</html>