{{!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous"> --}}

<div class="content-wrapper">
  <div class="container-fluid">
    <div class="row mt-3">

      <div class="col-lg-6">
        <div class="card">
          <div class="card-body">
            <h5 class="card-title">Bordered Table</h5>
            <div class="table-responsive">
              <table class="table table-bordered">
                <thead>
                  <tr>
                    <th scope="col">No</th>
                    <th scope="col">Image</th>
                    <th scope="col">Category Name</th>
                    <th scope="col">Action</th>
                  </tr>
                </thead>
                <tbody>
                  {{#each categories}}
                  <tr>
                    <th scope="row">1</th>
                    <td><img src="{{this.categoryImage}}" alt="{{this.categoryName}} "
                        style="max-width: 100px; max-height: 100px;"></td>
                    <td>{{this.categoryName}}</td>
                    <td>
                      <button type="button"
                        onclick="editCat('{{this._id}}','{{this.categoryName}}','{{this.categoryImage}}')">Edit</button>
                      <button type="button" onclick="deleteCat('{{this._id}}')">Delete</button>
                    </td>
                  </tr>
                  {{/each}}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>

    </div>
    <!--End Row-->

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModalLong">
  Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLongTitle">Modal title</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body text-dark">

                    <div class="mb-3">
                                <label for="productImage" class="form-label">Product Image URL</label>
                                <input type="file" class="form-control" id="productImage" name="images" multiple>
                                <small style="color: red;" id="productImageError"></small>
                            </div>
                            <div class="mb-3">
                                <label for="productName" class="form-label">Product Name</label>
                                <input type="text" class="form-control" id="productName" name="productName"
                                    oninput="capitalize(this)">
                                <small style="color: red;" id="productNameError"></small>
                            </div>
                            <div class="mb-3">
                                <label for="productColor" class="form-label">Product Color</label>
                                <input type="text" class="form-control" id="productColor" name="productColor"
                                    oninput="trimAndCapital(this)">
                                <small style="color: red;" id="productColorError"></small>
                            </div>
                            <div class="mb-3">
                                <label for="productMRP" class="form-label">Product MRP</label>
                                <input type="number" class="form-control"  placeholder="Max Amount 9999" id="productMRP" name="productMRP"
                                    placeholder="Max Amount 9999">
                                <small style="color: red;" id="productMRPError"></small>
                            </div>
                            <div class="mb-3">
                                <label for="productPrice" class="form-label">Product Price</label>
                                <input type="number" class="form-control" id="productPrice" name="productPrice"
                                    placeholder="Should Lessthan MRP">
                                <small style="color: red;" id="productPriceError"></small>
                            </div>
                            <div class="mb-3">
                                <label for="productDescription" class="form-label">Product Description</label>
                                <input type="text" class="form-control" id="productDescription"
                                    name="productDescription" placeholder="10 - 200 Words are required">
                                <small style="color: red;" id="productDescriptionError"></small>
                            </div>

                            <div class="mb-3">
                                <label for="sizeAndQuanity" class="form-label">Size And quantity </label>
                                <div class="btn btn-warning  ms-md-5" onclick="addRow()">Add Field</div><span> <small
                                        style="color: red;" id="fieldError"></small></span>
                                <div style="" class="row p-3" id="dynamicRows">
                                    {{!-- THE QUANTITY FIELD DYNAMICALLY COMES HERE --}}
                                </div>
         

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>




 <div class="dropdown">
  <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
    Dropdown
  </button>
  <ul class="dropdown-menu">
    <li><button class="dropdown-item" type="button">Dropdown item</button></li>
    <li><button class="dropdown-item" type="button">Dropdown item</button></li>
    <li><button class="dropdown-item" type="button">Dropdown item</button></li>
  </ul>
</div>





  </div>
</div>



 {{!-- <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script> --}}
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>

  //ADD CATEGORIS MODAL VALIDATION 
  // Validation function
  function validateAndSubmit() {
    var errorCount = 0
    // Reset error messages
    $('#categoryNameError').html("");
    $('#categoryImageError').html("");


    // Get form values
    var categoryName = $('#categoryName').val()
    let categoryImage = document.getElementById('categoryImage')
    let Regex = /^[a-zA-Z]{3,10}$/; // Only letters, length between 3 and 10

    // Validate inputs
    if (!Regex.test(categoryName)) {
      $('#categoryNameError').html("Required: Only letters, length between 3 and 10");
      errorCount++
    }

    if (categoryImage.files.length == 0) {
      $('#categoryImageError').html("Image is required");
      errorCount++
    }

    if (errorCount == 0) {
      // If all validations pass, submit the form
      $('#addForm').submit();

    }
  }





  //EDIT CATEGORY 

  let id = null; //DECLARE GLOBALLY TO STORE ID

  //THIS FUNCTION WILL MAKE OPEN EDIT MODAL
  function editCat(Id, name, image) {
    event.preventDefault();
    // alert(`${id},${name},${image}`)       
    new bootstrap.Modal($('#EditModal')).show()
    $('#categoryNameEdit').val(name)
    $('#categoryImageEditView').attr('src', image)
    id = Id
  }


  //UPDATAE FORM BUTTON TRIGGERS AND SEND TO SERVER
  function updateCat() {

    //VALIDATIONS
    let validate = false
    let categoryNameEdit = $('#categoryNameEdit').val()
    let categoryNameRegex = /^[a-zA-Z]{3,10}$/; // Only letters, length between 3 and 10

    if (categoryNameRegex.test(categoryNameEdit)) {
      $('#categoryNameEditError').html("")
      validate = true
    } else {
      $('#categoryNameEditError').html("Required: Only letters, length between 3 and 10")
    }


    if (validate) {

      console.log("update section entered after validations")
      event.preventDefault();
      let categoryNameEdit = $('#categoryNameEdit').val()
      let categoryImageEdit = document.getElementById('categoryImageEdit').files[0]
      console.log(categoryImageEdit)
      const formData = new FormData();
      formData.append('categoryNameEdit', categoryNameEdit);
      formData.append('image', categoryImageEdit);


      axios.put(`/admin/editCategory/${id}`, formData, {
        headers: {
          'Content-Type': 'multipart/form-data'
        }
      })
        .then((response) => {
          if (response.data.success) {
            alert("updates successfully")
            window.location.href = '/admin/ViewCategory'
          } else {
            alert("Nothing To Update")
            window.location.href = '/admin/ViewCategory'
          }
        })

        .catch((error) => {
          console.error("Error updating the category:", error);
          alert("Error in Updaing the category. Please try again later.");
        })
    }
  }




  //DELETE CATEGORY
  function deleteCat(catId) {
    event.preventDefault();
    //  alert(catId)
    axios.delete('/admin/deleteCategory', {
      data: { categoryId: catId }
    })

      .then(response => {
        if (response.data.success) {
          alert("Deleted successfully")
          window.location.href = "/admin/ViewCategory"
        } else {
          console.error("cant delete right now")
          alert("please try after sometime")
          window.location.href = "/admin/ViewCategory"
        }
      })
      .catch(error => {
        console.error("Error deleting the category:", error);
        alert("Error in deleting the category. Please try again later.");
      })
  }

</script>